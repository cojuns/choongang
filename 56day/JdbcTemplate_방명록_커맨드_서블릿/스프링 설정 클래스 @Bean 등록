package config;

import org.apache.tomcat.jdbc.pool.DataSource;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import command.ConfirmDeletionHandler;
import command.DeleteMessageHandler;
import command.ListHandler;
import command.WriteMessageHandler;
import guestbook.dao.MessageDao;
import guestbook.service.DeleteMessageService;
import guestbook.service.GetMessageListService;
import guestbook.service.WriteMessageService;

@Configuration
public class AppCtx {
	
	
	@Bean(destroyMethod = "close") // 빈이 소멸될 때 커넥션 풀을 닫도록 설정
	public DataSource dataSource() {
		
		DataSource ds = new DataSource();
		ds.setDriverClassName("com.mysql.jdbc.Driver");
		ds.setUrl("jdbc:mysql://localhost:3306/guestbook?"
				+"useSSL=true&useUnicode=true&characterEncoding=utf8");
		ds.setUsername("jspexam");
		ds.setPassword("jsppw");
		ds.setInitialSize(2); // 초기 커넥션 개수 지정
		ds.setMaxActive(10); // 최대 커넥션 개수 지정
		
		return ds;
		
	}
	
	@Bean
	public MessageDao messageDao() {
		return new MessageDao(dataSource());
	}
	
	@Bean
	public DeleteMessageService deleteMessageService() {
	return new DeleteMessageService();	
	}
	
	@Bean
	public GetMessageListService getMessageListService() {
		return new GetMessageListService();
	}
	
	@Bean
	public WriteMessageService writeMessageService() {
		return new WriteMessageService();
	}
	
	
	@Bean
	public ListHandler listHandler() {
		return new ListHandler();
	}
	
	@Bean
	public WriteMessageHandler writeMessageHandler() {
		return new WriteMessageHandler();
	}
	
	@Bean
	public ConfirmDeletionHandler confirmDeletionHandler() {
		return new ConfirmDeletionHandler();
	}
	
	@Bean
	public DeleteMessageHandler deleteMessageHandler() {
		return new DeleteMessageHandler();
	}
}
