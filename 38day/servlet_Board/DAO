package board.oracle;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.sql.DataSource;

public class BoardDao implements Board {

	@Override
	public Connection getConnection() {
		Context initCtx;
		Connection conn = null;
		try {
			initCtx = new InitialContext();
			DataSource source
			= (DataSource)initCtx.lookup(
					"java:comp/env/jdbc/OracleDB");
			conn = source.getConnection();
			
			
		} catch (NamingException | SQLException e) {
			// TODO: handle exception
		}
		return conn;
		
//		Connection conn = null;
//		try {
//			Class.forName("oracle.jdbc.driver.OracleDriver");
//			conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "scott", "tiger");
//		} catch (ClassNotFoundException | SQLException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//		
//		return conn;
	}

	@Override
	public ArrayList<BoardDto> selectList() {

		try {
			
			Connection conn = this.getConnection();
			ArrayList<BoardDto> list = new ArrayList<>();
			
			String sql = ("select * from board order by num desc");
			PreparedStatement pstm = conn.prepareStatement(sql);
			
			ResultSet rs = pstm.executeQuery();
			
			while(rs.next()) {
				
				int num = rs.getInt(1);
				String writer = rs.getString(2);
				String title = rs.getString(3);
				String content = rs.getString(4);
				String regtime = rs.getString(5);
				int hits = rs.getInt(6);
				
				BoardDto dto = new BoardDto(num, writer, title, content, regtime, hits);
//				dto.setNum(num);
//				dto.setWriter(writer);
//				dto.setTitle(title);
//				dto.setContent(content);
//				dto.setRegtime(regtime);
//				dto.setHits(hits);
				
				list.add(dto);
				
				
			}
			rs.close();
			pstm.close();
			conn.close();
			
				return list;
				
				
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return null;
		
		
	
	}

	@Override
	public BoardDto selectOne(int num, boolean incHits) {
		Connection conn = this.getConnection();
		BoardDto dto = null;
		
		try {

			String sql = "select * from board where num= ? "; 
			PreparedStatement pstmt = conn.prepareStatement(sql);
			
			pstmt.setInt(1, num);
			
			ResultSet rs = pstmt.executeQuery();
			
			
			if(rs.next()) {
				
				String writer = rs.getString(2);
				String title = rs.getString(3);
				String content = rs.getString(4);
				String regtime = rs.getString(5);
				int hits = rs.getInt(6);
				dto = new BoardDto(num, writer, title, content, regtime, hits);
					
		        if(incHits) {
		        	pstmt.executeUpdate(
		                    "update board set hits=hits+1 where num=" + num);
		        	
		        }
				
			
			}

			
			
			
			
			pstmt.close();
			conn.close();
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		

		
		return dto;
	}

	
	
	
	
	
	@Override
	public void insertOne(BoardDto dto) {
		Connection conn = this.getConnection();
		
		try {
			// Statement 예제
//			Statement stmt = conn.createStatement();
//			stmt.executeUpdate("delete from board where num=" + num);
//			stmt.close();
//			conn.close();
			
			// PreparedStatement 예제
			String sql = "INSERT INTO board (num, writer, title, content, regtime, hits) "
					+ "VALUES (SEQ_TEST.nextval, ?, ?, ?, to_char(sysdate, 'YYYY-MM-DD HH:MI:SS'), 0)"; 
			PreparedStatement pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, dto.getWriter());
			pstmt.setString(2, dto.getTitle());
			pstmt.setString(3, dto.getContent());
			pstmt.executeUpdate();
			
			pstmt.close();
			conn.close();
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
	}

	@Override
	public void updateOne(BoardDto dto) {
		Connection conn = this.getConnection();
		
		
		try {
			String sql = "UPDATE board SET writer=?, title=?, content=?, regtime=to_char(sysdate, 'YYYY-MM-DD HH:MI:SS') WHERE num=?";
			PreparedStatement pstmt = conn.prepareStatement(sql);
			
			pstmt.setString(1, dto.getWriter());
			pstmt.setString(2, dto.getTitle());
			pstmt.setString(3, dto.getContent());
			pstmt.setInt(4,dto.getNum());
			
			pstmt.executeUpdate();
			
			pstmt.close();
			conn.close();
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}

	@Override
	public void deleteOne(int num) {
		Connection conn = this.getConnection();
		
		
		try {
			// Statement 예제
//			Statement stmt = conn.createStatement();
//			stmt.executeUpdate("delete from board where num=" + num);
//			stmt.close();
//			conn.close();
			
			// PreparedStatement 예제
			String sql = "delete from board where num= ? "; 
			PreparedStatement pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, num);
			
			pstmt.executeUpdate();
			
			pstmt.close();
			conn.close();
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
	}

}
